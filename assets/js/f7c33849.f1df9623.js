"use strict";(self.webpackChunkxdk_docs=self.webpackChunkxdk_docs||[]).push([[307],{3905:function(e,a,n){n.d(a,{Zo:function(){return d},kt:function(){return u}});var o=n(7294);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,o,t=function(e,a){if(null==e)return{};var n,o,t={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var m=o.createContext({}),l=function(e){var a=o.useContext(m),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},d=function(e){var a=l(e.components);return o.createElement(m.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},c=o.forwardRef((function(e,a){var n=e.components,t=e.mdxType,r=e.originalType,m=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=l(n),u=t,g=c["".concat(m,".").concat(u)]||c[u]||p[u]||r;return n?o.createElement(g,i(i({ref:a},d),{},{components:n})):o.createElement(g,i({ref:a},d))}));function u(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var r=n.length,i=new Array(r);i[0]=c;var s={};for(var m in a)hasOwnProperty.call(a,m)&&(s[m]=a[m]);s.originalType=e,s.mdxType="string"==typeof e?e:t,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},321:function(e,a,n){n.r(a),n.d(a,{assets:function(){return d},contentTitle:function(){return m},default:function(){return u},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var o=n(7462),t=n(3366),r=(n(7294),n(3905)),i=["components"],s={title:"Criar uma p\xe1gina com formul\xe1rio",slug:"/app/tutorials/page-with-form"},m=void 0,l={unversionedId:"app/tutorials/page-with-form",id:"app/tutorials/page-with-form",title:"Criar uma p\xe1gina com formul\xe1rio",description:"Para criar uma p\xe1gina que cont\xe9m um formul\xe1rio, podemos fazer manualmente ou usando o gerador da XDK. Manualmente, envolveria criar uma p\xe1gina",source:"@site/docs/app/tutorials/page-with-form.md",sourceDirName:"app/tutorials",slug:"/app/tutorials/page-with-form",permalink:"/xdk-docs/docs/app/tutorials/page-with-form",draft:!1,tags:[],version:"current",frontMatter:{title:"Criar uma p\xe1gina com formul\xe1rio",slug:"/app/tutorials/page-with-form"},sidebar:"docs/app",previous:{title:"Criar uma p\xe1gina com tabela",permalink:"/xdk-docs/docs/app/tutorials/page-with-table"}},d={},p=[{value:"CONFIGURANDO O FORMUL\xc1RIO",id:"configurando-o-formul\xe1rio",level:2},{value:"CONFIGURANDO O CAMPO <code>nome</code>",id:"configurando-o-campo-nome",level:3},{value:"CONFIGURANDO O CAMPO <code>situacao</code>",id:"configurando-o-campo-situacao",level:3},{value:"1 - USANDO UM <em>ENDPOINT</em> PARA O SELECT",id:"1---usando-um-endpoint-para-o-select",level:4},{value:"2 - USANDO UMA LISTA LOCAL PARA O SELECT",id:"2---usando-uma-lista-local-para-o-select",level:4},{value:"CONFIGURANDO O CAMPO <code>dataCadastro</code>",id:"configurando-o-campo-datacadastro",level:3},{value:"CONFIGURANDO O SUBT\xcdTULO",id:"configurando-o-subt\xedtulo",level:3},{value:"ADICIONANDO OS M\xd3DULOS",id:"adicionando-os-m\xf3dulos",level:3},{value:"ADICIONANDO AS ROTAS",id:"adicionando-as-rotas",level:3}],c={toc:p};function u(e){var a=e.components,s=(0,t.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},c,s,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Para criar uma p\xe1gina que cont\xe9m um formul\xe1rio, podemos fazer manualmente ou usando o gerador da XDK. Manualmente, envolveria criar uma p\xe1gina\ncom o comando ",(0,r.kt)("inlineCode",{parentName:"p"},"ng g c nome-componente"),", criar um arquivo de configura\xe7\xe3o do formul\xe1rio e adicionar o HTML necess\xe1rio para o funcionamento dele. Nesse exemplo, iremos utilizar o utilit\xe1rio fornecido pela XDK, mas voc\xea pode fazer manualmente tamb\xe9m, como explicado."),(0,r.kt)("p",null,"Para criar a p\xe1gina precisamos executar o comando: ",(0,r.kt)("inlineCode",{parentName:"p"},"yo xdk:front --force"),"."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"A op\xe7\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"--force")," deve ser usada para evitar confirma\xe7\xf5es constantes do sistema de arquivos pedindo permiss\xe3o para fazer altera\xe7\xf5es."))),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Importante")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Esse comando deve ser executado na raiz do projeto."))),(0,r.kt)("p",null,"Uma s\xe9rie de perguntas ser\xe1 exibida. Em cada etapa voc\xea informa os dados desejados. Segue um exemplo de utiliza\xe7\xe3o:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Na primeira pergunta devemos informar o tipo do gerador a ser executado. Para nosso exemplo selecione a op\xe7\xe3o Formul\xe1rio e aperte ",(0,r.kt)("inlineCode",{parentName:"li"},"Enter"),".")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Gerador 1",src:n(9787).Z,width:"1168",height:"662"})),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Nas pr\xf3ximas perguntas iremos responder:",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Se desejamos criar um ",(0,r.kt)("inlineCode",{parentName:"li"},"store")," (deixaremos em n\xe3o porque o nosso j\xe1 est\xe1 criado)"),(0,r.kt)("li",{parentName:"ol"},"Qual o nome do ",(0,r.kt)("inlineCode",{parentName:"li"},"store")," (usaremos o store ",(0,r.kt)("inlineCode",{parentName:"li"},"gerenciamento-pacientes")," em nosso caso)"),(0,r.kt)("li",{parentName:"ol"},"O nome do formul\xe1rio (como ser\xe1 um formul\xe1rio de pacientes, iremos usar o nome ",(0,r.kt)("inlineCode",{parentName:"li"},"pacientes"),")"),(0,r.kt)("li",{parentName:"ol"},"Se deve usar o nome ",(0,r.kt)("inlineCode",{parentName:"li"},"form"),' como nome da pasta que cont\xe9m o formul\xe1rio. Se voc\xea estiver criando o formul\xe1rio dentro de um pasta pai (por exemplo, uma tabela que seja a listagem do item que voc\xea est\xe1 criando o formul\xe1rio ou qualquer outra pasta pai que seja do mesmo escopo), deixe a op\xe7\xe3o "Sim" marcada. Caso contr\xe1rio, selecione "N\xe3o" e ser\xe1 criada uma pasta com o nome informado mais o sufixo ',(0,r.kt)("inlineCode",{parentName:"li"},"-form")),(0,r.kt)("li",{parentName:"ol"},"Qual o tipo de dados da tabela (usaremos o ",(0,r.kt)("em",{parentName:"li"},"model")," j\xe1 criado: ",(0,r.kt)("inlineCode",{parentName:"li"},"PacienteModel"),")"),(0,r.kt)("li",{parentName:"ol"},"Por \xfaltimo, informar qual pasta cont\xe9m o nosso formul\xe1rio, como estamos criando essa p\xe1gina como filha de uma tabela, vamos colocar o nome da pasta da p\xe1gina da tabela como pai, ",(0,r.kt)("inlineCode",{parentName:"li"},"gerenciamento-pacientes"),", e apertar ",(0,r.kt)("inlineCode",{parentName:"li"},"Enter"),".")))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Gerador 2",src:n(5544).Z,width:"1558",height:"980"})),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Feito isso, o gerador ir\xe1 criar a p\xe1gina, o configurador da tabela e fazer as configura\xe7\xf5es necess\xe1rias. Teremos a seguinte\nestrutura de arquivos como resultado:")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Estrutura de pastas",src:n(4526).Z,width:"728",height:"582"})),(0,r.kt)("h2",{id:"configurando-o-formul\xe1rio"},"CONFIGURANDO O FORMUL\xc1RIO"),(0,r.kt)("p",null,"Vamos agora configurar o formul\xe1rio de acordo com nossas necessidades. Para isso, vamos abrir o\narquivo ",(0,r.kt)("inlineCode",{parentName:"p"},"pacientes.form-config.ts"),". Esse \xe9 o c\xf3digo gerado automaticamente:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/src/app/views/gerenciamento-pacientes/form/pacientes.form-config.ts" showLineNumbers',title:'"/src/app/views/gerenciamento-pacientes/form/pacientes.form-config.ts"',showLineNumbers:!0},"import {\n    BaseFormConfig,\n    FormTitleConfigModel,\n    FormRowModel,\n    FormFieldModel,\n    RequiredValidator\n} from '@itix/components'; \n\nexport class PacientesFormConfig extends BaseFormConfig {\n    constructor() {\n        super();\n\n        // TODO: Exemplo de utiliza\xe7\xe3o. Remover.\n        this.titleConfig = new FormTitleConfigModel({\n            onCreate: '[Cadastro de Pacientes] Cria\xe7\xe3o',\n            onEdit: '[Cadastro de Pacientes] Edi\xe7\xe3o',\n            onView: '[Cadastro de Pacientes] Visualiza\xe7\xe3o'\n        });\n        this.rows = [\n            new FormRowModel({\n                fields: [\n                    new FormFieldModel({\n                        name: 'name',\n                        label: 'Nome',\n                        validations: [\n                            new RequiredValidator()\n                        ]\n                    })\n                ]\n            })\n        ];\n    }\n}\n\n")),(0,r.kt)("h3",{id:"configurando-o-campo-nome"},"CONFIGURANDO O CAMPO ",(0,r.kt)("inlineCode",{parentName:"h3"},"nome")),(0,r.kt)("p",null,"Nosso modelo atualmente tem os campos ",(0,r.kt)("inlineCode",{parentName:"p"},"id"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"nome"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"situacao")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"dataCadastro"),". Para esse exemplo, vamos manter o campo ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," gerado automaticamente, s\xf3 trocando o nome e alterando o tamanho do campo na tela. Vamos deixar ocupando a metade da tela. Ficou assim (parte alterada destacada):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"new FormFieldModel({\n    // highlight-start\n    name: 'nome',\n    colSize: 6,\n    // highlight-end\n    label: 'Nome',\n    validations: [\n        new RequiredValidator()\n    ]\n})\n")),(0,r.kt)("p",null,"Como queremos que o campo seja obrigat\xf3rio, vamos manter o validador ",(0,r.kt)("inlineCode",{parentName:"p"},"RequiredValidator"),"."),(0,r.kt)("h3",{id:"configurando-o-campo-situacao"},"CONFIGURANDO O CAMPO ",(0,r.kt)("inlineCode",{parentName:"h3"},"situacao")),(0,r.kt)("p",null,"Vamos adicionar agora o campo ",(0,r.kt)("inlineCode",{parentName:"p"},"situacao"),". Por se tratar de um enumerador fixo, podemos criar uma lista local com essas op\xe7\xf5es ou usar um ",(0,r.kt)("em",{parentName:"p"},"endpoint")," que retorne essa lista est\xe1tica ou de uma base de dados. Vamos demonstrar como fazer das duas formas:"),(0,r.kt)("h4",{id:"1---usando-um-endpoint-para-o-select"},"1 - USANDO UM ",(0,r.kt)("em",{parentName:"h4"},"ENDPOINT")," PARA O SELECT"),(0,r.kt)("p",null,"Para usar um ",(0,r.kt)("em",{parentName:"p"},"endpoint"),", poder\xedamos criar um novo ",(0,r.kt)("em",{parentName:"p"},"store")," e adicionar o m\xe9todo que retorna a lista l\xe1, mas, no nosso caso, vamos usar o ",(0,r.kt)("em",{parentName:"p"},"store")," de pacientes que j\xe1 temos. Para isso, vamos adicionar um novo m\xe9todo para carregar os dados do ",(0,r.kt)("em",{parentName:"p"},"endpoint")," que lista as situa\xe7\xf5es:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/src/app/services/stores/gerenciamento-pacientes.store.ts" showLineNumbers',title:'"/src/app/services/stores/gerenciamento-pacientes.store.ts"',showLineNumbers:!0},"// ...\n@Injectable()\nexport class GerenciamentoPacientesStore extends BaseEntityStore<PacienteModel> {\n    constructor(\n        requestService: RequestService\n    ) {\n        super(\n            new StoreConfig<PacienteModel>({\n                requestService,\n                baseUrl: 'gerenciamento-pacientes'\n            })\n        );\n    }\n}\n\n")),(0,r.kt)("p",null,"Ap\xf3s alterar, ficar\xe1 assim (as partes alteradas est\xe3o destacadas):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/src/app/services/stores/gerenciamento-pacientes.store.ts" showLineNumbers',title:'"/src/app/services/stores/gerenciamento-pacientes.store.ts"',showLineNumbers:!0},"import { Injectable } from '@angular/core';\nimport {\n    BaseEntityStore,\n    RequestService,\n    // highlight-start\n    KeyValueModel,\n    SearchRequestModel,\n    SearchResponseModel,\n    // highlight-end\n    StoreConfig\n} from '@itix/core';\n// highlight-start\nimport { Observable } from 'rxjs';\n// highlight-end\n\nimport { PacienteModel } from '../../models/paciente.model';\n\n@Injectable()\nexport class GerenciamentoPacientesStore extends BaseEntityStore<PacienteModel> {\n    constructor(\n        requestService: RequestService\n    ) {\n        super(\n            new StoreConfig<PacienteModel>({\n                requestService,\n                baseUrl: 'gerenciamento-pacientes'\n            })\n        );\n    }\n\n    // highlight-start\n    listarSituacoes(\n        request = new SearchRequestModel()\n    ): Observable<SearchResponseModel<KeyValueModel>> {\n        return this._config.requestService.makePost<SearchResponseModel<KeyValueModel>>(\n            this.getRequestModel('listar-situacoes', request)\n        );\n    }\n    // highlight-end\n}\n\n")),(0,r.kt)("p",null,"Com essa altera\xe7\xe3o, podemos agora adicionar o campo no arquivo ",(0,r.kt)("inlineCode",{parentName:"p"},"pacientes.form-config.ts"),", ficar\xe1 assim:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"new FormFieldSelectModel({\n    name: 'situacao', // Nome da propriedade no objeto.\n    label: 'Situa\xe7\xe3o', // Texto exibido como descri\xe7\xe3o do campo no formul\xe1rio.\n    colSize: 4, // Tamanho da coluna usando o padr\xe3o GridSystem.\n    store: store, // Store que ir\xe1 realizar a busca dos dados.\n    storeMethodName: 'listarSituacoes', // Nome do m\xe9todo, no store, que ir\xe1 fazer a busca dos dados.\n    keyProperty: 'key', // Nome da propriedade usada como chave no objeto retornado pelo store.\n    valueProperty: 'value' // Nome da propriedade usada como descri\xe7\xe3o no objeto retornado pelo store.\n})\n")),(0,r.kt)("p",null,"Para adicionar o ",(0,r.kt)("em",{parentName:"p"},"store")," no ",(0,r.kt)("inlineCode",{parentName:"p"},"FormFieldSelectModel"),", precisamos alterar o construtor de ",(0,r.kt)("inlineCode",{parentName:"p"},"PacientesFormConfig"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// ...\nexport class PacientesFormConfig extends BaseFormConfig {\n    // highlight-start\n    constructor(store: GerenciamentoPacientesStore) {\n    // highlight-end\n        // ...\n    }\n}\n")),(0,r.kt)("p",null,"E em ",(0,r.kt)("inlineCode",{parentName:"p"},"PacientesFormComponent"),", adicionar o novo par\xe2metro:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"this.config = new PacientesFormConfig(gerenciamentoPacientesStore);\n")),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Importante")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Se n\xf3s tiv\xe9ssemos um ",(0,r.kt)("em",{parentName:"p"},"store")," espec\xedfico para as situa\xe7\xf5es, n\xe3o teria sido necess\xe1rio informar o nome do m\xe9todo de pesquisa, nem criar o novo m\xe9todo no ",(0,r.kt)("em",{parentName:"p"},"store"),", a XDK iria utilizar automaticamente o m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"list")," do ",(0,r.kt)("em",{parentName:"p"},"store")," ",(0,r.kt)("inlineCode",{parentName:"p"},"BaseListStore"),"."))),(0,r.kt)("h4",{id:"2---usando-uma-lista-local-para-o-select"},"2 - USANDO UMA LISTA LOCAL PARA O SELECT"),(0,r.kt)("p",null,"Para usar uma lista com dados locais, nosso modelo ficaria assim:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"new FormFieldSelectModel({\n    name: 'situacao',\n    label: 'Situa\xe7\xe3o',\n    colSize: 4,\n    keyProperty: 'key',\n    valueProperty: 'value',\n    items: [\n        new KeyValueModel({ \n            key: `${SituacaoPacienteEnum.Ativo}`, \n            value: 'Ativo' \n        }),\n        new KeyValueModel({ \n            key: `${SituacaoPacienteEnum.AguardandoAtivacao}`, \n            value: 'Aguardando ativa\xe7\xe3o' \n        }),\n        new KeyValueModel({ \n            key: `${SituacaoPacienteEnum.Desativado}`, \n            value: 'Desativado' \n        })\n    ]\n})\n")),(0,r.kt)("h3",{id:"configurando-o-campo-datacadastro"},"CONFIGURANDO O CAMPO ",(0,r.kt)("inlineCode",{parentName:"h3"},"dataCadastro")),(0,r.kt)("p",null,"Vamos adicionar agora o campo ",(0,r.kt)("inlineCode",{parentName:"p"},"dataCadastro"),". Ele \xe9 um campo de data, por isso vamos usar o ",(0,r.kt)("inlineCode",{parentName:"p"},"DatePicker"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"new FormFieldDateModel({\n    name: 'dataCadastro',\n    label: 'Data de cadastro',\n    colSize: 4\n})\n")),(0,r.kt)("p",null,"Como n\xe3o queremos adicionar esse campo na linha atual do formul\xe1rio, vamos adicion\xe1-lo em uma nova linha:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"new FormRowModel({\n    fields: [\n        // ...\n    ]\n}),\nnew FormRowModel({\n    fields: [\n        new FormFieldDateModel({\n            name: 'dataCadastro',\n            label: 'Data de cadastro',\n            colSize: 4\n        })\n    ]\n})\n")),(0,r.kt)("p",null,"O arquivo de configura\xe7\xe3o do formul\xe1rio (",(0,r.kt)("inlineCode",{parentName:"p"},"PacientesFormConfig"),") completo, ficou assim: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/src/app/views/gerenciamento-pacientes/form/pacientes.form-config.ts" showLineNumbers',title:'"/src/app/views/gerenciamento-pacientes/form/pacientes.form-config.ts"',showLineNumbers:!0},"import {\n    BaseFormConfig,\n    FormTitleConfigModel,\n    FormRowModel,\n    FormFieldModel,\n    RequiredValidator,\n    FormFieldSelectModel,\n    FormFieldDateModel\n} from '@itix/components'; \n\nimport { GerenciamentoPacientesStore } from '../../../services/stores/gerenciamento-pacientes.store'; \n\nexport class PacientesFormConfig extends BaseFormConfig {\n    constructor(store: GerenciamentoPacientesStore) {\n        super();\n\n        this.titleConfig = new FormTitleConfigModel({\n            onCreate: 'Cadastrar paciente',\n            onEdit: 'Editar paciente',\n            onView: 'Visualizar paciente'\n        });\n        this.rows = [\n            new FormRowModel({\n                fields: [\n                    new FormFieldModel({\n                        name: 'nome',\n                        colSize: 6,\n                        label: 'Nome',\n                        validations: [\n                            new RequiredValidator()\n                        ]\n                    }),\n                    new FormFieldSelectModel({\n                        name: 'situacao',\n                        label: 'Situa\xe7\xe3o',\n                        colSize: 4,\n                        store: store,\n                        storeMethodName: 'listarSituacoes',\n                        keyProperty: 'key',\n                        valueProperty: 'value'\n                    })\n                ]\n            }),\n            new FormRowModel({\n                fields: [\n                    new FormFieldDateModel({\n                        name: 'dataCadastro',\n                        label: 'Data de cadastro',\n                        colSize: 4\n                    })\n                ]\n            })\n        ];\n    }\n}\n\n")),(0,r.kt)("h3",{id:"configurando-o-subt\xedtulo"},"CONFIGURANDO O SUBT\xcdTULO"),(0,r.kt)("p",null,"Podemos remover o subt\xedtulo, mas para o nosso caso iremos utiliz\xe1-lo. Para isso, vamos remover o coment\xe1rio gerado automaticamente e mudar o texto de ",(0,r.kt)("inlineCode",{parentName:"p"},"PacientesForm")," para ",(0,r.kt)("inlineCode",{parentName:"p"},"paciente")," no arquivo ",(0,r.kt)("inlineCode",{parentName:"p"},"pacientes-form.component.ts"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/src/app/views/gerenciamento-pacientes/form/pacientes-form.component.ts" showLineNumbers',title:'"/src/app/views/gerenciamento-pacientes/form/pacientes-form.component.ts"',showLineNumbers:!0},"override ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    // highlight-start\n    this.setupSubheader(`${this.getStateTitle()} de paciente`);\n    // highlight-end\n}\n")),(0,r.kt)("p",null,"E no arquivo ",(0,r.kt)("inlineCode",{parentName:"p"},"pacientes-form.component.html")," vamos mudar a propriedade ",(0,r.kt)("inlineCode",{parentName:"p"},"title")," para: ",(0,r.kt)("inlineCode",{parentName:"p"},'title="Formul\xe1rio"')),(0,r.kt)("h3",{id:"adicionando-os-m\xf3dulos"},"ADICIONANDO OS M\xd3DULOS"),(0,r.kt)("p",null,"Para utilizar o formul\xe1rio da XDK, precisamos adicionar dois m\xf3dulos ao nosso arquivo ",(0,r.kt)("inlineCode",{parentName:"p"},"views.module.ts"),",  ",(0,r.kt)("inlineCode",{parentName:"p"},"CardModule")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"FormModule"),". Nosso arquivo ficar\xe1 assim (as partes alteradas est\xe3o destacadas):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/src/app/views/views.module.ts" showLineNumbers',title:'"/src/app/views/views.module.ts"',showLineNumbers:!0},"import { NgModule } from '@angular/core'; \nimport { CommonModule } from '@angular/common'; \n// highlight-start\nimport { LayoutsModule, ColumnModule, FormModule, CardModule } from '@itix/components'; \n// highlight-end\n\nimport { HomeComponent } from './home/home.component'; \nimport { \n    GerenciamentoPacientesComponent \n} from './gerenciamento-pacientes/gerenciamento-pacientes.component'; \nimport { \n    PacientesFormComponent \n} from './gerenciamento-pacientes/form/pacientes-form.component'; \n\n@NgModule({\n    imports: [\n        CommonModule,\n        LayoutsModule,\n        ColumnModule,\n        // highlight-start\n        CardModule,\n        FormModule\n        // highlight-end\n    ],\n    declarations: [\n        HomeComponent,\n        GerenciamentoPacientesComponent,\n        PacientesFormComponent\n    ],\n    exports: [\n        HomeComponent,\n        GerenciamentoPacientesComponent,\n        PacientesFormComponent\n    ]\n})\nexport class ViewsModule { }\n\n")),(0,r.kt)("h3",{id:"adicionando-as-rotas"},"ADICIONANDO AS ROTAS"),(0,r.kt)("p",null,"Agora que a p\xe1gina est\xe1 criada, vamos adicionar as rotas pra ela no arquivo ",(0,r.kt)("inlineCode",{parentName:"p"},"app-routing.module.ts"),". Como se trata de uma rota-filha, vamos alterar a entrada da tabela para funcionar com o registro aninhado. Segue exemplo:"),(0,r.kt)("p",null,"Como estava:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// ...\n{\n    path: 'pacientes',\n    component: GerenciamentoPacientesComponent,\n    data: {\n        showInMenu: true,\n        title: 'Gerenciamento de pacientes',\n        icon: 'fad fa-user-injured'\n    }\n}\n// ...\n")),(0,r.kt)("p",null,"Como ficou:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// ...\n{\n    path: 'pacientes',\n    data: {\n        isGroup: true,\n        title: 'Gerenciamento de pacientes',\n        breadcrumb: 'Gerenciamento de pacientes',\n        icon: 'fad fa-user-injured'\n    },\n    children: [\n        {\n            path: '',\n            component: GerenciamentoPacientesComponent,\n            data: {\n                showInMenu: true,\n                title: 'Lista'\n            }\n        },\n        {\n            path: 'add',\n            component: PacientesFormComponent,\n            data: {\n                showInMenu: true,\n                title: 'Novo',\n                breadcrumb: 'Novo'\n            }\n        },\n        { path: ':id', component: PacientesFormComponent, data: { breadcrumb: 'Visualizar' } },\n        { path: ':id/edit', component: PacientesFormComponent, data: { breadcrumb: 'Editar' } }\n    ]\n}\n// ...\n")),(0,r.kt)("p",null,"Arquivo final com a parte alterada em destaque:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/src/app/app-routing.module.ts" showLineNumbers',title:'"/src/app/app-routing.module.ts"',showLineNumbers:!0},"// imports...\nexport const routes: Routes = [\n    { path: '', pathMatch: 'full', redirectTo: 'home' },\n\n    {\n        path: '',\n        component: DefaultLayoutComponent,\n        data: {\n            showChildrenInMenu: true\n        },\n        children: [\n            {\n                path: 'home',\n                component: HomeComponent,\n                data: {\n                    showInMenu: true,\n                    title: 'Home',\n                    icon: 'fad fa-home'\n                }\n            },\n            {\n                path: '',\n                data: {\n                    isSection: true,\n                    title: 'Cadastros',\n                    breadcrumb: 'Cadastros'\n                },\n                children: [\n                    {\n                        path: 'pacientes',\n                        // highlight-start\n                        data: {\n                            isGroup: true,\n                            title: 'Gerenciamento de pacientes',\n                            breadcrumb: 'Gerenciamento de pacientes',\n                            icon: 'fad fa-user-injured'\n                        },\n                        children: [\n                            {\n                                path: '',\n                                component: GerenciamentoPacientesComponent,\n                                data: {\n                                    showInMenu: true,\n                                    title: 'Lista'\n                                }\n                            },\n                            {\n                                path: 'add',\n                                component: PacientesFormComponent,\n                                data: {\n                                    showInMenu: true,\n                                    title: 'Novo',\n                                    breadcrumb: 'Novo'\n                                }\n                            },\n                            { \n                                path: ':id', \n                                component: PacientesFormComponent, \n                                data: { breadcrumb: 'Visualizar' } \n                            },\n                            { \n                                path: ':id/edit', \n                                component: PacientesFormComponent, \n                                data: { breadcrumb: 'Editar' } \n                            }\n                        ]\n                        // highlight-end\n                    }\n                ]\n            }\n        ]\n    },\n\n    { path: '**', redirectTo: 'home' }\n]; \n")),(0,r.kt)("p",null,"Feito tudo isso, teremos a seguinte tela:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Tela formul\xe1rio",src:n(9867).Z,width:"2276",height:"1088"})))}u.isMDXComponent=!0},9787:function(e,a,n){a.Z=n.p+"assets/images/form1-cf51f9fc419feec10475896bedfab175.png"},5544:function(e,a,n){a.Z=n.p+"assets/images/form2-d6d39baaa974db780581327b1e8cd087.png"},4526:function(e,a,n){a.Z=n.p+"assets/images/form3-7e25105b035abb72e22ce0476b99ce6b.png"},9867:function(e,a,n){a.Z=n.p+"assets/images/form4-4e989990a04f0ff28bf93ca83b52ad2a.png"}}]);